last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
uninstall_course(R Programming)
uninstall_course("R Programming")
swirl()
help(swirl)
install_from_swirl("R Programming")
swirl()
delete_progress(KrishnaK, path=NULL)
swirl()
library(swirl)
delete_progress(KrishnaK, path=NULL)
delete_progress("KrishnaK", path=NULL)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
head(EPA)
head(PM2.5)
head(pollution)
dim(pollution)
summary(pm25)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col='blue')
abline(h=12)
hist(ppm,col='green')
rug(ppm)
low
high
hist(ppm,col='green',breaks=100)
rug(ppm)
hist(ppm,col='green')
abline(v=12,lwd=2)
abline(v=median(ppm),col='magenta',lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col='wheat',main='Number of Counties in Each Region')
boxplot(pm25~region,data=pollution,col='red')
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution,region='east')
east <- subset(pollution,region="east")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west"),col="green")
hist(subset(pollution$pm25,region=="west"),col="green")
hist(subset(pollution,region=="west")[1],col="green")
hist(subset(pollution,region=="west")[,1],col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
with(pollution,plot(latitude~pm25))
with(pollution,plot(latitude,pm25))
abline(12,lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?devices
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data"))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev-cur()
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
swirl()
library(swirl)
swirl()
head(cars)
with(cars,plot(speed,dist))
text(cars$speed, max(cars$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
swirl()
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
qplot(displ,hwy,data=mpg)
swirl()
qplot(displ,hwy,data=mpg)
library(ggplot2)
qplot(displ,hwy,data=mpg)
swirl()
qplot(displ,hwy,data=mpg)
swirl()
qplot(displ,hwy,data=mpg)
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type=n)
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality,month==5)
may <- subset(airquality,Month==5)
points(may$wind~may$ozone,col='blue',pch=3)
points(may$Wind~may$Ozone,col='blue',pch=3)
points(may$Wind~may$Ozone,col='blue',pch=17)
points(may$Wind,may$Ozone,col='blue',pch=17)
notmay <- subset(airquality,Month!=5)
points(may$Wind,may$Ozone,col='red',pch=20)
points(may$Wind,may$Ozone,col='red',pch=8)
points(notmay$Wind,notmay$Ozone,col='red',pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(median(airquality$Wind),lty=2)
abline(median(airquality$Wind),lty=2,lwd=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow =c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
hpc <- read.table("household_power_consumption.txt",skip=1,sep=';')
names(hpc) <- c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3")
subhpc <- subset(hpc,hpc$Date=="1/2/2007" | hpc$Date =="2/2/2007")
head(subhpc)
Timestamp <- strptime(paste(subhpc$Date, subhpc$Time, sep=" "),"%d/%m/%y %H:%M:%S")
subhpc <- cbind(subhpc, Timestamp)
head(subhpc)
Timestamp <- strptime(paste(as.char(subhpc$Date), as.char(subhpc$Time), sep=" "),"%d/%m/%y %H:%M:%S")
Timestamp <- strptime(paste(as.character(subhpc$Date), as.character(subhpc$Time), sep=" "),"%d/%m/%y %H:%M:%S")
head(Timestamp)
range(Timestamp)
Timestamp <- strptime(paste(as.character(subhpc$Date), as.character(subhpc$Time), sep=" "),"%d/%m/%Y %H:%M:%S")
range(Timestamp)
Timestamp <- strptime(paste(subhpc$Date, subhpc$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
range(Timestamp)
subhpc <- cbind(subhpc, Timestamp)
head(subhpc)
subhpc <- subset(hpc,hpc$Date=="1/2/2007" | hpc$Date =="2/2/2007")
Timestamp <- strptime(paste(subhpc$Date, subhpc$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
subhpc <- cbind(subhpc, Timestamp)
head(subhpc)
plot(subhpc$Timestamp, subhpc$Global_active_power, type="1",xlab="",ylab="Global Active power (kilowatts)")
?plot
plot(subhpc$Timestamp, subhpc$Global_active_power,xlab="",ylab="Global Active power (kilowatts)")
plot(subhpc$Timestamp, subhpc$Global_active_power,type="l",xlab="",ylab="Global Active power (kilowatts)")
plot(subhpc$Timestamp, as.numeric(subhpc$Global_active_power),type="l",xlab="",ylab="Global Active power (kilowatts)")
plot(subhpc$Timestamp, as.numeric(subhpc$Global_active_power),type="l",xlab="Day",ylab="Global Active power (kilowatts)")
class(subhpc$Global_active_power)
plot(subhpc$Timestamp, as.numeric(as.character(subhpc$Global_active_power)),type="l",xlab="Day",ylab="Global Active power (kilowatts)")
png("plot2.png", width=480, height=480)
plot(subhpc$Timestamp, as.numeric(as.character(subhpc$Global_active_power)),type="l",xlab="Day",ylab="Global Active power (kilowatts)")
dev.off()
plot(subhpc$Timestamp, as.numeric(as.character(subhpc$Sub_metering_1)),type="n",xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp, as.numeric(subhpc$Sub_metering_1),type="n",xlab="Day",ylab="Energy sub metering")
range(Sub_metering_1)
range(subhpc$Sub_metering_1)
summary(subhpc$Sub_metering_1)
plot(subhpc$Timestamp,subhpc$Sub_metering_1,type="n",xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp,subhpc$Sub_metering_1,type="n",xlab="Day",ylab="Energy sub metering")
?plot
plot(subhpc$Timestamp,subhpc$Sub_metering_1,xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp,subhpc$Sub_metering_1,xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp,subhpc$Sub_metering_1,xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp,subhpc$Sub_metering_1,type="l",xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp,subhpc$Sub_metering_1,type="n",xlab="Day",ylab="Energy sub metering")
plot(subhpc$Timestamp,subhpc$Sub_metering_1,type="l",xlab="Day",ylab="Energy sub metering")
lines(subhpc$Timestamp,subhpc$Sub_metering_2,type="l",col="red")
lines(subhpc$Timestamp,subhpc$Sub_metering_3,type="l",col="blue")
legend(c("topright"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty= 1, lwd=2, col = c("black", "red", "blue"))
legend("topright", lty=1, col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_1)),type="l",xlab="Day",ylab="Energy sub metering")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_2)),type="l",col="red")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_3)),type="l",col="blue")
legend("topright", lty=1, col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
png("plot3.png", width=480, height=480)
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_1)),type="l",xlab="Day",ylab="Energy sub metering")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_2)),type="l",col="red")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_3)),type="l",col="blue")
legend("topright", lty=1, col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
par(mfrow=c(2,2))
plot(subpower$Time,as.numeric(as.character(subpower$Global_active_power)),type="l",  xlab="",ylab="Global Active Power")
plot(subhpc$Time,as.numeric(as.character(subhpc$Global_active_power)),type="l",  xlab="",ylab="Global Active Power")
plot(subhpc$Time,as.numeric(as.character(subhpc$Voltage)),type="l",  xlab="datetime",ylab="Voltage")
par(mfrow=c(2,2))
plot(subhpc$Time,as.numeric(as.character(subhpc$Global_active_power)),type="l",  xlab="",ylab="Global Active Power")
plot(subhpc$Time,as.numeric(as.character(subhpc$Voltage)),type="l",  xlab="datetime",ylab="Voltage")
head(subhpc)
par(mfrow=c(2,2))
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Global_active_power)),type="l", xlab="",ylab="Global Active Power")
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Voltage)),type="l", xlab="datetime",ylab="Voltage")
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_1)),type="l",xlab="Day",ylab="Energy sub metering")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_2)),type="l",col="red")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_3)),type="l",col="blue")
legend("topright", lty=1, col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Global_reactive_power)),type="l", xlab="datetime",ylab="Global_reactive_power")
par(mfrow=c(2,2))
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Global_active_power)),type="l", xlab="",ylab="Global Active Power")
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Voltage)),type="l", xlab="datetime",ylab="Voltage")
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_1)),type="l",xlab="Day",ylab="Energy sub metering")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_2)),type="l",col="red")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_3)),type="l",col="blue")
legend(c("topright"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty= 1, lwd=2, col = c("black", "red", "blue"))
legend("topright", lty=1, col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), cex = 0.6)
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Global_reactive_power)),type="l", xlab="datetime",ylab="Global_reactive_power")
png("plot4.png", width=480, height=480)
par(mfrow=c(2,2))
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Global_active_power)),type="l", xlab="",ylab="Global Active Power")
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Voltage)),type="l", xlab="datetime",ylab="Voltage")
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_1)),type="l",xlab="Day",ylab="Energy sub metering")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_2)),type="l",col="red")
lines(subhpc$Timestamp,as.numeric(as.character(subhpc$Sub_metering_3)),type="l",col="blue")
legend("topright", lty=1, col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(subhpc$Timestamp,as.numeric(as.character(subhpc$Global_reactive_power)),type="l", xlab="datetime",ylab="Global_reactive_power")
dev.off()
